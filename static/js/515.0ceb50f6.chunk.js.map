{"version":3,"file":"static/js/515.0ceb50f6.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","hooks/useContact.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/SortedBtns/SortedBtns.styled.jsx","components/SortedBtns/SortedBtns.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  display: block;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 40px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  margin-top: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const ContactsWrapper = styled.div`\n  width: 400px;\n  margin-bottom: 35px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  padding: 25px;\n  margin-top: 12px;\n  background-color: white;\n`;\n\nexport const Message = styled.p`\n  font-size: 30px;\n  font-weight: 400;\n  margin: 0;\n  text-align: center;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: 0, 0 0 10px rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #007bff;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  background-color: white;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: 0, 0 0 10px rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #007bff;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectSortedAlphabetic = state => state.contacts.sortedAlphabetic;\n\nexport const selectRecentlyAdded = state => state.contacts.recentlyAdded;\n\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const filtredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return filtredContacts;\n  }\n);\n\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectRecentlyAdded,\n  selectSortedAlphabetic,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const sortedAlphabetic = useSelector(selectSortedAlphabetic);\n  const recentlyAdded = useSelector(selectRecentlyAdded);\n\n  return {\n    contacts,\n    visibleContacts,\n    error,\n    isLoading,\n    sortedAlphabetic,\n    recentlyAdded,\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { Input, AddButton, Form, Title } from './ContactForm.styled';\nimport { IoMdContacts } from 'react-icons/io';\nimport Notiflix from 'notiflix';\nimport Loader from '../Loader/Loader';\nimport { addContact } from 'redux/contacts/operation';\nimport { useContacts } from 'hooks/useContact';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n  const { isLoading } = useContacts();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value };\n    if (contacts.find(existingContact => existingContact.name === name.value)) {\n      Notiflix.Notify.failure(`${contact.name} вже у ваших контактах`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Назва може містити лише літери, апостроф, тире та пробіли. Наприклад Адріан, Джейкоб Мерсер, Шарль де Бац де Кастельмор д'Артаньян\"\n          required\n          placeholder=\"Name\"\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Номер телефону має складатися з цифр і може містити пробіли, тире, круглі дужки та починатися з +\"\n          required\n          placeholder=\"Number\"\n        />\n        <AddButton type=\"submit\">\n          <span>Add contacts </span>\n          {isLoading ? (\n            <Loader color={'#ffffff'} size={'20'} />\n          ) : (\n            <IoMdContacts size=\"20\" />\n          )}\n        </AddButton>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  min-width: 400px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 15px 25px;\n\n  border: 0;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  background-color: white;\n\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        onChange={handleChange}\n      ></FilterInput>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const LoaderStyled = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 15px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px groove #3d484a;\n  padding: 10px 0;\n`;\n\nexport const Btn = styled.button`\n  width: 32px;\n  height: 32px;\n  margin-left: 10px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: ${proprs => (proprs.delete ? '#de2214' : '#0e613e')};\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #54515193;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { SlClose } from 'react-icons/sl';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(0 0 0 / 10%);\n  z-index: 100;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: block;\n  height: 30px;\n  width: 30px;\n  right: 10px;\n  z-index: 1;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Icon = styled(SlClose)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: color 200ms linear;\n\n  :hover {\n    color: #0fc1dd;\n  }\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  background-color: white;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: 0, 0 0 10px rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #007bff;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/operation';\nimport { IoMdContacts } from 'react-icons/io';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport Loader from '../Loader/Loader';\nimport {\n  BtnClose,\n  ModalWindow,\n  Overlay,\n  Form,\n  Input,\n  AddButton,\n  Icon,\n} from './Modal.styled';\n\nconst Modal = ({ contactInfo, toggleOpen }) => {\n  const { name, number, id } = contactInfo;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value, id };\n    dispatch(editContact(contact));\n    toggleOpen();\n  };\n\n  return (\n    <Overlay>\n      <ModalWindow>\n        <Form onSubmit={handleSubmit}>\n          <BtnClose onClick={toggleOpen}>\n            <Icon size=\"30\" />\n          </BtnClose>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Назва може містити лише літери, апостроф, тире та пробіли. Наприклад Адріан, Джейкоб Мерсер, Шарль де Бац де Кастельмор д'Артаньян\"\n            required\n            placeholder=\"Name\"\n            defaultValue={name}\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефону має складатися з цифр і може містити пробіли, тире, круглі дужки та починатися з +\"\n            required\n            placeholder=\"Number\"\n            defaultValue={number}\n          />\n          <AddButton type=\"submit\">\n            <span>Edit contacts </span>{' '}\n            {isLoading ? <Loader /> : <IoMdContacts size=\"25\" />}\n          </AddButton>\n        </Form>\n      </ModalWindow>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const SortBtn = styled.button`\n  min-width: 180px;\n  height: 30px;\n  margin: ;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: #007bff;\n  border: none;\n  z-index: 1;\n  box-shadow: 0, 0 0 10px rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { sortByAdded, sortByName } from 'redux/contacts/contactSlice';\nimport { SortBtn, BtnWrapper } from './SortedBtns.styled';\nimport { useContacts } from 'hooks/useContact';\nimport { ImSortAlphaAsc, ImSortAlphaDesc } from 'react-icons/im';\nimport { LiaSortDownSolid, LiaSortUpSolid } from 'react-icons/lia';\n\nconst SortedBtns = () => {\n  const dispatch = useDispatch();\n  const { sortedAlphabetic } = useContacts();\n  const { recentlyAdded } = useContacts();\n  return (\n    <BtnWrapper>\n      <SortBtn onClick={() => dispatch(sortByName())}>\n        Sort by name\n        {sortedAlphabetic ? (\n          <ImSortAlphaDesc size=\"20\" />\n        ) : (\n          <ImSortAlphaAsc size=\"20\" />\n        )}\n      </SortBtn>\n      <SortBtn onClick={() => dispatch(sortByAdded())}>\n        Recently added{' '}\n        {recentlyAdded ? (\n          <LiaSortUpSolid size=\"20\" />\n        ) : (\n          <LiaSortDownSolid size=\"20\" />\n        )}\n      </SortBtn>\n    </BtnWrapper>\n  );\n};\n\nexport default SortedBtns;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { IoMdCloseCircleOutline } from 'react-icons/io';\nimport { deleteContact } from 'redux/contacts/operation';\nimport {\n  List,\n  ListItem,\n  Btn,\n  BtnWrapper,\n  LoaderStyled,\n} from './ContactsList.styled';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport Modal from '../Modal/Modal';\nimport SortedBtns from '../SortedBtns/SortedBtns';\nimport Loader from '../Loader/Loader';\nimport { useContacts } from 'hooks/useContact';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { visibleContacts } = useContacts();\n  const { isLoading } = useContacts();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [targetContact, setTargetContact] = useState({});\n\n  const toggleOpen = () => setIsModalOpen(!isModalOpen);\n\n  const handleClick = e => {\n    const id = e.currentTarget.parentNode.parentNode.dataset.id;\n    const targetContact = visibleContacts.find(contact => contact.id === id);\n    setTargetContact(targetContact);\n    toggleOpen();\n  };\n\n  const handleDelete = id => {\n    Confirm.show(\n      'Видалення контакту',\n      'Хочете видалити цей контакт?',\n      'Yes',\n      'No',\n      () => {\n        dispatch(deleteContact(id));\n      }\n    );\n  };\n\n  return (\n    <>\n      <SortedBtns />\n      {isLoading ? (\n        <LoaderStyled>\n          {' '}\n          <Loader color={'#0fc1dd'} size={'50'} />\n        </LoaderStyled>\n      ) : (\n        <List>\n          {visibleContacts.map(({ name, number, id }) => {\n            return (\n              <ListItem data-id={id} key={id}>\n                {name}: {number}\n                <BtnWrapper>\n                  <Btn type=\"button\" onClick={handleClick}>\n                    <MdOutlineModeEdit size=\"20\" />\n                  </Btn>\n                  <Btn delete type=\"button\" onClick={() => handleDelete(id)}>\n                    {isLoading ? (\n                      <Loader color={'#ffffff'} size={'20'} />\n                    ) : (\n                      <IoMdCloseCircleOutline size=\"20\" />\n                    )}\n                  </Btn>\n                </BtnWrapper>\n                {isModalOpen && (\n                  <Modal toggleOpen={toggleOpen} contactInfo={targetContact} />\n                )}\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Section, Title, ContactsWrapper, Message } from './Contacts.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { useContacts } from 'hooks/useContact';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <div>\n        <ContactForm />\n        <Filter />\n      </div>\n      <div>\n        <Title>Contacts</Title>\n        <ContactsWrapper>\n          {contacts.length > 0 ? (\n            <ContactsList />\n          ) : (\n            <Message>Add your first contact</Message>\n          )}\n        </ContactsWrapper>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contacts;"],"names":["Section","styled","Title","ContactsWrapper","Message","Form","Input","AddButton","selectContacts","state","contacts","selectError","error","selectIsLoading","isLoading","selectSortedAlphabetic","sortedAlphabetic","selectRecentlyAdded","recentlyAdded","selectVisibleContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","useContacts","useSelector","visibleContacts","dispatch","useDispatch","onSubmit","e","preventDefault","target","number","value","find","existingContact","Notiflix","addContact","reset","type","title","required","placeholder","Loader","color","size","Label","FilterInput","onChange","setFilter","LoaderStyled","List","ListItem","Btn","proprs","delete","BtnWrapper","Overlay","ModalWindow","BtnClose","Icon","SlClose","contactInfo","toggleOpen","id","editContact","onClick","pattern","defaultValue","SortBtn","sortByName","sortByAdded","useState","isModalOpen","setIsModalOpen","targetContact","setTargetContact","handleClick","currentTarget","parentNode","dataset","map","Confirm","deleteContact","handleDelete","useEffect","fetchContacts","length","ContactsList"],"sourceRoot":""}